import {
  Button,
  Link,
  Paper,
  Stack,
  SxProps,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Checkbox,
} from "@mui/material";
import { faker } from "@faker-js/faker";
import OrderService from '../api/api.tsx';
import Order from '../models/Order.tsx';

interface Order {
  id: string;
  createdDate: Date;
  createdByUsername: string;
  type: string;
  customerName: string;
}

let OrderType: string[] = ['Standard', 'Sale Order', 'Purchase Order', 'Transfer Order', 'Return Order'];


const orders: Array<Order> = [];
console.log("Something");
var ordersList: Array<Order> = [];
OrderService.getAll()      
      .then((response: any) => {
        for (let i = 0; i < response.data.length; i++) {
          console.log(response.data[i]);
          orders.push({
            id: response.data[i].id,
            createdDate: new Date(response.data[i].createdDate),
            createdByUsername: response.data[i].createdByUsername,
            type: OrderType[response.data[i].type],
            customerName: response.data[i].customerName
          });
        }
      })
      .catch((e: Error) => {
        console.log(e);
      });
console.log("Next? " + ordersList);


/*for (let i = 0; i < ordersList.length; i++) {
  console.log(ordersList[i]);
  orders.push({
    id: ordersList[i].id,
    createdDate: ordersList[i].createdDate,
    createdByUsername: ordersList[i].createdByUsername,
    type: ordersList[i].type,
    customerName: ordersList[i].customerName
  });
}*/

const tableContainerSx: SxProps = {
  width: "inherit",
  marginLeft: 0,
  marginRight: 0,
  marginTop: 4,
  borderRadius: 2,
  maxHeight: 700
};

export default function OrderTable() {
  return (
    <>
      <TableContainer
        component={Paper}
        sx={tableContainerSx}
        class="container"
      >
        <Table stickyHeader={true}>
          <TableHead>
            <TableRow>
              <TableCell scope="header" ><Checkbox color="error"/></TableCell>
              <TableCell scope="header">Order Id</TableCell>
              <TableCell scope="header">Creation Date</TableCell>
              <TableCell scope="header">Created by</TableCell>
              <TableCell scope="header">Order Type</TableCell>
              <TableCell scope="header">Customer Name</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {orders.map((order) => (
              <TableRow key={order.id}>
              <TableCell scope="header"><Checkbox color="error"/></TableCell>
                <TableCell scope="row">
                  <Stack direction="column">
                    <div>
                    {order.id}
                    </div>
                  </Stack>
                </TableCell>
                <TableCell scope="row">
                    <div>
                    {order.createdDate.toString()}
                    </div>
                </TableCell>
                <TableCell scope="row">{order.createdByUsername}</TableCell>
                <TableCell scope="row">
                  {order.type}
                </TableCell>                
                <TableCell scope="row">
                    {order.customerName}
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>
    </>
  );
}